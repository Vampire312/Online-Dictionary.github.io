# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        name: Setup Node.js environment

on:
  workflow_dispatch: # You can adjust the trigger event based on your needs

jobs:
  setup-node:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.2
      with:
        node-version: 14.x # Specify the Node.js version you want to use
        cache: npm # Specify the package manager you are using for caching (npm, yarn, pnpm)
        cache-dependency-path: | # Specify the path to your dependency file(s) for caching
          package-lock.json
          # Add other dependency files if needed

    - name: Install dependencies
      run: npm install # Adjust based on your package manager (npm, yarn, pnpm)

